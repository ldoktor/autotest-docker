[docker_cli/run]
docker_timeout = 60
#: modifies the running container options (assume --sig-proxy
#: is enabled by default)
run_options_csv = --tty,--rm,--attach=stdout
#: csv command prefix (docker run ... $bash_cmd $cmd)
bash_cmd = /bin/bash,-c
#: Specifies the executed command inside the container
cmd =
#: expected exit status
exit_status =
subsubtests = run_true,run_false,run_signal,run_interactive,run_interactive_disconnect,run_attach_stdout,run_remote_tag,run_names

[docker_cli/run/run_true]
cmd = /bin/true
exit_status = 0

[docker_cli/run/run_false]
cmd = /bin/false
exit_status = 1

[docker_cli/run/run_names]
cmd = sleep 2s
run_options_csv = --detach
#: TODO
last_name_sticks = yes
#: TODO
names_count = 1000
exit_status = 0

[docker_cli/run/run_signal]
#: Used signal
listen_signal = SIGUSR1
run_options_csv = --rm
#: Random hash
secret_sauce = WF1l6Bha7BgoigcP
#: Executed command
cmd = 'echo "%(secret_sauce)s"; rm -f stop; trap "/usr/bin/date > stop" %(listen_signal)s; while ! [ -f stop ]; do :; done'
exit_status = 0
#: How long to wait before testing (for container to come up)
wait_start = 5

[docker_cli/run/run_interactive]
run_options_csv = --interactive,--rm
bash_cmd = cat
#: Testing input handed over to container's stdin
interactive_cmd = repeat-please
   test
#: Expected stdout output
check_i_cmd_out = repeat-please
   test
exit_status = 0
#: How long to wait before entering the test input
wait_interactive_cmd = 2

[docker_cli/run/run_interactive_disconnect]
run_options_csv = -d,--interactive
#: modifies the docker attach options
attach_options_csv =
bash_cmd = cat
#: Testing input handed over to container's stdin
interactive_cmd = repeat-please
   test
#: Expected stdout output
check_i_cmd_out = repeat-please
   test
exit_status = 0
#: How long to wait before entering the test input
wait_interactive_cmd = 5

[docker_cli/run/run_attach_stdout]
run_options_csv = --interactive
#: modifies the docker attach options
attach_options_csv = --no-stdin=true
#: Random hash
secret_sauce = 4c93bb78d98f
cmd = 'echo "%(secret_sauce)s"; cat'
exit_status = 0
#: How long to wait before entering the test input
wait_interactive_cmd = 1

[docker_cli/run/run_remote_tag]
#: **Set this to image stored in remote repo**
remote_image_fqin =
run_options_csv =
bash_cmd = echo test
cmd =
