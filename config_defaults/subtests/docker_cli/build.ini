[docker_cli/build]
#: ``docker build`` options
docker_build_options = --rm
#: **Remote busybox location (if None the test tries to use /usr/sbin/busybox)**
# http://www.busybox.net/downloads/binaries/latest/busybox-x86_64
busybox_url =
#: Don't change this; paths to Dockerfiles used in test (prebuilt during setup)
source_dirs = full,part,bad
#: Maximal allowed duration of docker build
build_timeout_seconds = 120
image_name_prefix = docker_test
image_name_postfix = :test
subsubtests = local_path,https_file,git_path,rm_false,rm_false_nocache,bad,bad_quiet,bad_force_rm
#: Which containers should be exist (None/False=none,
#: LAST=only last one, True=all intermediary))
docker_build_intermediary_containers =
#: Expected ``docker build`` error message (used only if exit_code != 0)
docker_build_fail_msg =

[docker_cli/build/local_path]
#: '/'+relative path from this tests setup path
dockerfile_path = /full

[docker_cli/build/https_file]
#: **Specify path to http/https based dockerfile (raw)**
dockerfile_path = https://raw.githubusercontent.com/ldoktor/autotest-docker-appliance/master/Dockerfile2

[docker_cli/build/git_path]
#: **Specify path to git based dockerfile**
dockerfile_path = github.com/ldoktor/autotest-docker-appliance

[docker_cli/build/rm_false]
#: dockerfile path of the first build
dockerfile_path = /part
#: dockerfile path of the second build
dockerfile_path2 = /full
#: How many unique steps are in 1st vs. 2nd build
dockerfile_new_containers = 2
#: How many steps are there in dockerfile_path2 dockerfile
dockerfile_all_containers = 6
#: ``docker build`` options of the second build
docker_build_options2 = --rm=false

[docker_cli/build/rm_false_nocache]
#: dockerfile path of the first build
dockerfile_path = /part
#: dockerfile path of the second build
dockerfile_path2 = /full
#: How many unique steps are in 1st vs. 2nd build
dockerfile_new_containers = 6
#: How many steps are there in the second build
dockerfile_all_containers = 6
#: ``docker build`` options of the second build
docker_build_options2 = --rm=false --no-cache=true

[docker_cli/build/bad]
#: '/'+relative path from this tests setup path
dockerfile_path = /bad
docker_build_fail_msg = exec: "this_shoud_fail": executable file not found in $PATH
docker_build_intermediary_containers = LAST
#: How many containers should exist after this test
dockerfile_new_containers = 1
#: How many containers are created with intermediary containers enabled
dockerfile_all_containers = 7
#: Expected string in stdout
docker_build_stdout = ^Ho ho ho!$

[docker_cli/build/bad_force_rm]
#: '/'+relative path from this tests setup path
dockerfile_path = /bad
docker_build_options = --force-rm
docker_build_fail_msg = exec: "this_shoud_fail": executable file not found in $PATH
#: Expected string in stdout
docker_build_stdout = ^Ho ho ho!$

[docker_cli/build/bad_quiet]
#: '/'+relative path from this tests setup path
dockerfile_path = /bad
docker_build_options = --rm --quiet
docker_build_fail_msg = exec: "this_shoud_fail": executable file not found in $PATH
docker_build_intermediary_containers = LAST
#: How many containers should exist after this test
dockerfile_new_containers = 1
#: How many containers are created with intermediary containers enabled
dockerfile_all_containers = 7
#: Forbidden stdout string
docker_build_no_stdout = ^Ho ho ho!$
